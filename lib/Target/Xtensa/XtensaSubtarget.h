//===-- XtensaSubtarget.h - Define Subtarget for the Xtensa -------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This file declares the Xtensa specific subclass of TargetSubtargetInfo.
//
//===----------------------------------------------------------------------===//

#ifndef XtensaSUBTARGET_H
#define XtensaSUBTARGET_H

#include "Xtensa.h"
#include "XtensaFrameLowering.h"
#include "XtensaISelLowering.h"
#include "XtensaInstrInfo.h"
#include "XtensaSelectionDAGInfo.h"
#include "XtensaSubtarget.h"
#include "llvm/Target/TargetMachine.h"
#include "llvm/Target/TargetSubtargetInfo.h"
#include <string>

#define GET_SUBTARGETINFO_HEADER
#include "XtensaGenSubtargetInfo.inc"

namespace llvm {
class StringRef;

class XtensaSubtarget : public XtensaGenSubtargetInfo {
  virtual void anchor();

private:
  const DataLayout DL;       // Calculates type size & alignment.
  XtensaInstrInfo InstrInfo;
  XtensaTargetLowering TLInfo;
  XtensaSelectionDAGInfo TSInfo;
  XtensaFrameLowering FrameLowering;
  InstrItineraryData InstrItins;

public:
  /// This constructor initializes the data members to match that
  /// of the specified triple.
  ///
  XtensaSubtarget(const Triple &TT, StringRef CPU,
               StringRef FS, XtensaTargetMachine &TM);

  /// getInstrItins - Return the instruction itineraries based on subtarget
  /// selection.
  const InstrItineraryData *getInstrItineraryData() const override {
    return &InstrItins;
  }
  const XtensaInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const XtensaRegisterInfo *getRegisterInfo() const override {
    return &InstrInfo.getRegisterInfo();
  }
  const XtensaTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }
  const XtensaFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const XtensaSelectionDAGInfo *getSelectionDAGInfo() const override {
    return &TSInfo;
  }

  /// ParseSubtargetFeatures - Parses features string setting specified
  /// subtarget options.  Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef FS);
};
} // End llvm namespace

#endif

